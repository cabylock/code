//@UsePipes(new ValidationPipe()) // ValidationPipe for  a specific controller or route

import mongoose, { Schema } from "mongoose";


//- 1 server : 1 client : mỗi lần xong 1 request thì server sẽ đóng kết nối
websocker: 
//-realtime : giữ kết nối mở ; 
   //- mở 1 kết nối và giữ kết nối mở để gửi dữ liệu qua lại giữa client và server
      //hạn chế : ... 


ajax : //reload without refresh 
//front : ajax -> react ( library) gọi request riêng biệt   ;

redis: // 1 loại databsaes : lưu trữ dữ liệu trong bộ nhớ


//phải dùng @prop() để đánh dấu field của một chema(model)
// @Prop() name: string;

//raw  =>nestjs
collection => Schema
mongoose.Schema => class + @Prop (model)
mongoose.model('User', UserSchema);  => export const UsersSchema = SchemaFactory.createForClass(Users);




